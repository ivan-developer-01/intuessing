(async () => {
const greetings = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –£–≥–∞–¥–∞–π–∫—É! üòé<br><br>
–ó–¥–µ—Å—å –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –≤ –≥–æ–ª–æ–≤–µ, –∞ –ø–æ—Ç–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è —É–≥–∞–¥–∞—Ç—å –≤–∞—à–µ —á–∏—Å–ª–æ, –∑–∞ –Ω–µ –±–æ–ª–µ–µ —á–µ–º 20 —à–∞–≥–æ–≤! ü´°<br><br>

–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏—à–∞–º–∏. –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª–∞–≤–∏—à:<br>

<ul>
    <li>M/–¨, O/–©, —Å—Ç—Ä–µ–ª–∫–∞ –≤–≤–µ—Ä—Ö ‚Äî –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ —á–∏—Å–ª–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞</li>
    <li>L/–î, —Å—Ç—Ä–µ–ª–∫–∞ –≤–Ω–∏–∑ ‚Äî –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ —á–∏—Å–ª–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞</li>
    <li>E/–£, C/–°, —Å—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ ‚Äî –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω—è–µ—Ç—Å—è —á–∏—Å–ª—É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞</li>
    <li>R/–ö, —Å—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ ‚Äî –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞)</li>
</ul>

–ö–ª–∞–≤–∏—à–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∞–Ω–≥–ª–ë—É–∫–≤–∞/—Ä—É—Å–ë—É–∫–≤–∞, –∏–ª–∏, –µ—Å–ª–∏ —ç—Ç–æ –∫–ª–∞–≤–∏—à–∏, —Ç–æ —Ç–µ–∫—Å—Ç–æ–º. –ö–ª–∞–≤–∏—à–∏ –Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É. üòê<br><br>

–ü–æ—Ö–æ–¥—É –∏–≥—Ä—ã –≤—ã, –≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ–π–º—ë—Ç–µ –ª—É—á—à–µ. –£–¥–∞—á–∏! üòâ`;

await alerts({
    modalMessage: greetings
});

const numberText = JSON.parse(document.querySelector("#numberTextContent").textContent);

let minValue;
let maxValue;

await requestMinMax();

const btns = {
    retry: document.querySelector("#btnRetry"),
    less: document.querySelector("#btnLess"),
    over: document.querySelector("#btnOver"),
    equal: document.querySelector("#btnEqual")
};

let answerNumber;
setAnswerNumber();

let orderNumber = 1;
let gameRun = true;

const orderNumberField = document.querySelector("#orderNumberField");
const answerField = document.querySelector("#answerField");

displayContents();

btns.retry.addEventListener("click", async () => {
    //             –µ—Å–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∫–∞–∫–æ–π-—Ç–æ –¥–∏–∞–ª–æ–≥, —Ç–æ –∑–∞—á–µ–º –µ–≥–æ –≤—ã–∑—ã–≤–∞—Ç—å —Å–Ω–æ–≤–∞?
    if (gameRun || document.querySelector(".modal-outer")) return;
    // request min&max
    await requestMinMax();
    // minValue = 0;
    // maxValue = 100;
    orderNumber = 1;
    setAnswerNumber();
    displayContents();
    gameRun = true;
});

// —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
document.addEventListener("keyup", (event) => {
    let key = event.key.toUpperCase();

    if (key === "M" || key === "–¨" ||
        key === "O" || key === "–©" ||
        key === "ARROWUP") btns.over.click();

    if (key === "L" || key === "–î" ||
        key === "ARROWDOWN") btns.less.click();

    if (key === "E" || key === "–£" ||
        key === "C" || key === "–°" ||
        key === "ARROWRIGHT") btns.equal.click();

    if (key === "R" || key === "–ö" ||
        key === "ARROWLEFT") btns.retry.click();
});

btns.less.addEventListener("click", () => {
    if (gameRun) {
        if (minValue === maxValue) {
            const phraseRandom = Math.round(Math.random());
            const answerPhrase = (phraseRandom === 1) ?
                `–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!\n\u{1F914}` :
                `–Ø —Å–¥–∞—é—Å—å..\n\u{1F92F}`;

            answerField.textContent = answerPhrase;
            setNotGameRun();
        } else {
            maxValue = answerNumber - 1;
            answerNumber = Math.floor((minValue + maxValue) / 2);
            const answerNumberText = numberToText(answerNumber);
            orderNumber++;

            displayContents();
        }
    }
});

btns.over.addEventListener("click", () => {
    if (gameRun) {
        if (minValue === maxValue) {
            const phraseRandom = Math.round(Math.random());
            const answerPhrase = (phraseRandom === 1) ?
                `–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!\n\u{1F914}` :
                `–Ø —Å–¥–∞—é—Å—å..\n\u{1F92F}`;

            answerField.textContent = answerPhrase;
            setNotGameRun();
        } else {
            minValue = answerNumber + 1;
            setAnswerNumber();
            const answerNumberText = numberToText(answerNumber);
            orderNumber++;

            displayContents();
        }
    }
});

btns.equal.addEventListener("click", function () {
    if (gameRun) {
        answerField.textContent = `–Ø –≤—Å–µ–≥–¥–∞ —É–≥–∞–¥—ã–≤–∞—é\n\u{1F60E}`;
        setNotGameRun();
    }
});

function numberToText(n) {
	let stringDigit = "";
	let nStr = n.toString();
    let originalN = n;
	n = Math.abs(n);

	if (nStr.startsWith("-")) {
		// –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã —á–∏—Å–ª–æ –±—ã–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å "–º–∏–Ω—É—Å "
		stringDigit += (-n >= -999) ? "–º–∏–Ω—É—Å " : ""; // –ø—Ä–æ–±–µ–ª —Ç—É—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
		nStr = nStr.slice(1);
	}

	// —â–∞ –∫–∞–∫ —Å–¥–µ–ª–∞—é!
	if ((n >= 1 && n <= 19) || 
		(n <= -1 && n >= -19)) {
		stringDigit += numberText[n];
	} else if ((n >= 20 && n <= 99) || 
			   (n <= -20 && n >= -99)) {
		stringDigit += numberText[nStr[0] + "0"];
		if (!n.toString().endsWith("0")) {
			stringDigit += " " + numberText[n % 10];
		}
	} else if ((n >= 100 && n <= 999) || 
			   (n <= -100 && n >= -999)) {
		stringDigit += numberText[nStr[0] + "00"];

		let twoSignN = (n % 100).toString();

		// –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ n = 123, —Ç–æ –æ—Å—Ç–∞—Ç–æ–∫ –±—É–¥–µ—Ç 23
		if (twoSignN >= 1 && twoSignN <= 19) {
			stringDigit += " " + numberText[twoSignN];
		} else {
			stringDigit += " " + numberText[twoSignN[0] + "0"];
		}
	
		if (!nStr.endsWith("0") && (twoSignN >= 20 && twoSignN <= 99)) {
			stringDigit += " " + numberText[twoSignN[1]];
		}
	}

	stringDigit = stringDigit.replaceAll("  ", " ");
	stringDigit = stringDigit.trim();

	let strDigitLength = stringDigit.length;

	if (strDigitLength >= 21) {
		stringDigit = n;
	}

	return stringDigit || originalN;
}

function setAnswerNumber() {
    answerNumber = Math.floor((minValue + maxValue) / 2);
}

async function requestMinMax() {
    // minValue = parseInt(await libPrompt("–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã", "0") || "0") || 0;
    await libPrompt("–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã", "0").then(res => {
        const result = parseInt(res || "0") || 0;
        minValue = result;
    });
    // maxValue = parseInt(await libPrompt("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã", "100") || "100") || 100;
    await libPrompt("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã", "100").then(res => {
        const result = parseInt(res || "100") || 100;
        maxValue = result;
    });

    await libAlert(`–ó–∞–≥–∞–¥–∞–π—Ç–µ –ª—é–±–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç ${minValue} –¥–æ ${maxValue}, –∞ —è –µ–≥–æ —É–≥–∞–¥–∞—é`);
}

function displayContents() {
    orderNumberField.textContent = orderNumber;
    answerField.textContent = `–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${numberToText(answerNumber)}?`;
}

function setNotGameRun() {
    gameRun = false;
}

function libAlert(message = "") {
    alerts({
        modalMessage: message
    });
}

async function libPrompt(message = "", defaultText = "") {
    return prompts({
        modalMessage: message,
        defaultText: defaultText
    });
}
})();